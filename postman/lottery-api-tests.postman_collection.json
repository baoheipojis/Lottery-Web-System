{
  "info": {
    "name": "Lottery API Tests",
    "_postman_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET /api/habits",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/habits",
          "host": ["{{baseUrl}}"],
          "path": ["api", "habits"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"Response is array\", () => pm.expect(pm.response.json()).to.be.an('array'));"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /api/habits",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/habits",
          "host": ["{{baseUrl}}"],
          "path": ["api", "habits"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"CI Habit\",\n  \"description\": \"Created by CI\",\n  \"baseRewardPoints\": 20\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
              "const b = pm.response.json();",
              "pm.test(\"Has id property\", () => pm.expect(b).to.have.property('id'));"
            ]
          }
        }
      ]
    },
    {
      "name": "GET /api/prizes/draw",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/prizes/draw",
          "host": ["{{baseUrl}}"],
          "path": ["api", "prizes", "draw"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"抽奖成功\", () => pm.response.to.have.status(200));",
              "pm.test(\"包含 id,name,rarity\", () => pm.expect(pm.response.json()).to.include.keys('id','name','rarity'));"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /api/prizes",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "url": {
          "raw": "{{baseUrl}}/api/prizes",
          "host": ["{{baseUrl}}"],
          "path": ["api", "prizes"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"新奖品\",\n  \"rarity\": 3,\n  \"description\": \"奖品描述\",\n  \"isRepeatable\": true\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"状态 200\", () => pm.response.to.have.status(200));",
              "const b = pm.response.json();",
              "pm.test(\"包含 id\", () => pm.expect(b).to.have.property('id'));",
              "pm.environment.set('prizeId', b.id);"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /api/prizes/{{prizeId}}",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "url": {
          "raw": "{{baseUrl}}/api/prizes/{{prizeId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "prizes", "{{prizeId}}"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"更新后名称\",\n  \"rarity\": 5,\n  \"fiveStarType\": \"normal\",\n  \"description\": \"更新描述\",\n  \"isRepeatable\": false\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"状态 200\", () => pm.response.to.have.status(200));",
              "const p = pm.response.json();",
              "pm.test(\"名称已更新\", () => pm.expect(p.name).to.eql('更新后名称'));",
              "pm.test(\"稀有度为5\", () => pm.expect(p.rarity).to.eql(5));"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /api/prizes/{{prizeId}}",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/prizes/{{prizeId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "prizes", "{{prizeId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"删除成功返回200\", () => pm.response.to.have.status(200));",
              "const res = pm.response.json();",
              "pm.test(\"返回 success 状态\", () => pm.expect(res.status).to.eql('success'));"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /api/prizes/{{prizeId}}/toggle",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "url": {
          "raw": "{{baseUrl}}/api/prizes/{{prizeId}}/toggle",
          "host": ["{{baseUrl}}"],
          "path": ["api", "prizes", "{{prizeId}}", "toggle"]
        },
        "body": {
          "mode": "raw",
          "raw": "{ \"enabled\": false }"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"状态 200\", () => pm.response.to.have.status(200));",
              "const pr = pm.response.json();",
              "pm.test(\"enabled 字段为 false\", () => pm.expect(pr.enabled).to.be.false);"
            ]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ]
}
